apiVersion: v1
kind: ConfigMap
metadata:
  name: sysdigcloud-config
data:
  # Required: MySQL endpoint DNS/IP. If MySQL is deployed as a Kubernetes service, 
  # this will be the service name. If using an external database, put the proper address
  mysql.endpoint: sysdigcloud-mysql
  # Required: MySQL user
  mysql.user: admin
  # Required: MySQL password
  mysql.password: password
  # Required: Cassandra endpoint DNS/IP. If Cassandra is deployed as a Kubernetes service, 
  # this will be the service name. If using an external database, put the proper address
  # (the address of a single node will be sufficient)
  cassandra.endpoint: sysdigcloud-cassandra
  # Optional: Cassandra replication factor to use. This parameter will just be applied during the
  # keyspace creation, no changes are done to an already existing keyspace
  cassandra.replication.factor: "1"
  # Optional: Cassandra JVM options, when Cassandra is started as a Kubernetes service using
  # the provided manifests. For heavy load environments you'll need to tweak the memory or garbage
  # collection settings
  cassandra.jvm.options: ""
  # Required: Redis endpoint DNS/IP. If Redis is deployed as a Kubernetes service, 
  # this will be the service name. If using an external database, put the proper address
  redis.endpoint: sysdigcloud-redis
  # Required: Elasticsearch URL. If Elasticsearch is deployed as a Kubernetes service,
  # this will be the service name. If using an external database, put the proper address
  elasticsearch.url: http://sysdigcloud-elasticsearch
  # Optional: Elasticsearch JVM options, when Elasticsearch is started as a Kubernetes service using
  # the provided manifests. For heavy load environments you'll need to tweak the memory or garbage
  # collection settings
  elasticsearch.jvm.options: ""
  # Optional: SMTP server address, needed for Sysdig Cloud to send email notifications
  smtp.server: ""
  # Optional: SMTP server port
  smtp.server.port: "25"
  # Optional: SMTP user (leave empty if your server doesn't require authentication)
  smtp.user: ""
  # Optional: SMTP password (leave empty if your server doesn't require authentication)
  smtp.password: ""
  # Optional: SMTP Secure Connection options
  smtp.tls: "false"
  smtp.ssl: "false"
  # Optional: From Header used for email notifications
  smtp.from.address: ""
  # Required: Collector service endpoint DNS/IP. If the collector needs to be reachable outside the Kubernetes
  # cluster, this will likely need to be set to the address of the Kubernetes nodes (if using a NodePort service) or the
  # cloud load balancer created by the service (if using a LoadBalancer service). Otherwise, it can be left
  # to the default value and the collector will just be routable within the Kubernetes cluster.
  collector.endpoint: sysdigcloud-collector
  # Required: Collector port. If using a LoadBalancer service for the collector, the port can be left as the default.
  # If using a NodePort service, this will need to be set to the dynamic port allocated by Kubernetes on the nodes
  # (obtained via kubectl describe service sysdigcloud-collector)
  collector.port: "6443"
  # Required: Api service https URL. If the api needs to be reachable outside the Kubernetes
  # cluster, this will likely need to be set to the address of the Kubernetes nodes and the dynamic port allocated
  # by Kubernetes (if using a NodePort service) or the cloud load balancer created by the service (if using a LoadBalancer service). 
  # Otherwise, it can be left to the default value and the api will just be routable within the Kubernetes cluster.
  api.url: https://sysdigcloud-api:443
  # Required: Sysdig Cloud default user. This will be used for the initial login in the web interface
  sysdigcloud.default.user: test@sysdig.com
  # Required: Sysdig Cloud default user password
  sysdigcloud.default.user.password: test
  # Optional: Sysdig Cloud application JVM options. For heavy load environments you'll need to tweak 
  # the memory or garbage collection settings
  sysdigcloud.jvm.options: ""
  # Required: Sysdig Cloud license
  sysdigcloud.license: ""
